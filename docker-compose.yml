version: '3.8'

services:
  # 1. Service Registry (Eureka)
  registry-service:
    build: ./services/registry-service
    container_name: registry-service
    ports:
      - "8761:8761"

  # 2. Database (MySQL)
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d # Chạy script tạo các DB
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 3. Message Broker (RabbitMQ)
  rabbitmq-broker:
    image: rabbitmq:3.13-management
    container_name: rabbitmq-broker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # 4. API Gateway (ĐÃ CẬP NHẬT)
  gateway-service:
    build: ./services/gateway-service
    container_name: gateway-service
    ports:
      # Đây là cổng chính bạn truy cập từ bên ngoài
      - "8080:8080"
    environment:
      # Tiêm biến cho Eureka
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://registry-service:8761/eureka/
      # Tiêm biến cho JWT
      APP_JWT_SECRETKEY: g5rhnoLF2O4S/p5wPKY9ojbK3X2g6ifB6cG9lkaLUg9quMDtO1PSI4J6biyJHZ5uAnyTbuTyaWRpHy+BADU7NQ==
    depends_on:
      # Gateway phải chờ registry khởi động
      registry-service:
        condition: service_started
      # Gateway cũng nên chờ các service khác, nhưng chờ Eureka là quan trọng nhất
      # vì nó sẽ tự động khám phá các service kia sau

  # 5. User Service
  user-service:
    build: ./services/user-microservice
    container_name: user-microservice
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/userservice
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://registry-service:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq-broker
      APP_JWT_SECRETKEY: g5rhnoLF2O4S/p5wPKY9ojbK3X2g6ifB6cG9lkaLUg9quMDtO1PSI4J6biyJHZ5uAnyTbuTyaWRpHy+BADU7NQ==
    depends_on:
      registry-service:
        condition: service_started
      mysql-db:
        condition: service_healthy
      rabbitmq-broker:
        condition: service_started

  # 6. Product Service
  product-service:
    build: ./services/product-microservice
    container_name: product-microservice
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/productservice
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://registry-service:8761/eureka/
      APP_JWT_SECRETKEY: g5rhnoLF2O4S/p5wPKY9ojbK3X2g6ifB6cG9lkaLUg9quMDtO1PSI4J6biyJHZ5uAnyTbuTyaWRpHy+BADU7NQ==
    depends_on:
      registry-service:
        condition: service_started
      mysql-db:
        condition: service_healthy

  # 7. Order Service
  order-service:
    build: ./services/order-microservice
    container_name: order-microservice
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/orderservice
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://registry-service:8761/eureka/
    depends_on:
      registry-service:
        condition: service_started
      mysql-db:
        condition: service_healthy

volumes:
  mysql-data:

networks:
  default:
    name: microservice-net